<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.sys4u.spring.instagram.core.repository.member.MemberRepository">
  <resultMap id="BaseResultMap" type="kr.sys4u.spring.instagram.core.dto.member.Member">
    <id column="NO" jdbcType="DECIMAL" property="no" />
    <result column="ID" jdbcType="VARCHAR" property="id" />
    <result column="PWD" jdbcType="VARCHAR" property="pwd" />
    <result column="MESSAGE" jdbcType="VARCHAR" property="message" />
    <result column="DELETED" jdbcType="CHAR" property="deleted" />
    <result column="CREATED_DATE" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="UPDATED_DATE" jdbcType="TIMESTAMP" property="updatedDate" />
  </resultMap>
  
  <select id="selectMember" resultType="member">
  	SELECT * FROM MEMBER
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    NO, ID, PWD, MESSAGE, DELETED, CREATED_DATE, UPDATED_DATE
  </sql>
  <select id="selectByExample" parameterType="kr.sys4u.spring.instagram.core.dto.member.MemberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from NEWBIE.MEMBER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Short" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from NEWBIE.MEMBER
    where NO = #{no,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short">
    delete from NEWBIE.MEMBER
    where NO = #{no,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="kr.sys4u.spring.instagram.core.dto.member.MemberExample">
    delete from NEWBIE.MEMBER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="kr.sys4u.spring.instagram.core.dto.member.Member">
    insert into NEWBIE.MEMBER (NO, ID, PWD, 
      MESSAGE, DELETED, CREATED_DATE, 
      UPDATED_DATE)
    values (#{no,jdbcType=DECIMAL}, #{id,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, 
      #{message,jdbcType=VARCHAR}, #{deleted,jdbcType=CHAR}, #{createdDate,jdbcType=TIMESTAMP}, 
      #{updatedDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="kr.sys4u.spring.instagram.core.dto.member.Member">
    insert into NEWBIE.MEMBER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="no != null">
        NO,
      </if>
      <if test="id != null">
        ID,
      </if>
      <if test="pwd != null">
        PWD,
      </if>
      <if test="message != null">
        MESSAGE,
      </if>
      <if test="deleted != null">
        DELETED,
      </if>
      <if test="createdDate != null">
        CREATED_DATE,
      </if>
      <if test="updatedDate != null">
        UPDATED_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="no != null">
        #{no,jdbcType=DECIMAL},
      </if>
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=CHAR},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null">
        #{updatedDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="kr.sys4u.spring.instagram.core.dto.member.MemberExample" resultType="java.lang.Long">
    select count(*) from NEWBIE.MEMBER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update NEWBIE.MEMBER
    <set>
      <if test="record.no != null">
        NO = #{record.no,jdbcType=DECIMAL},
      </if>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.pwd != null">
        PWD = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.message != null">
        MESSAGE = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.deleted != null">
        DELETED = #{record.deleted,jdbcType=CHAR},
      </if>
      <if test="record.createdDate != null">
        CREATED_DATE = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedDate != null">
        UPDATED_DATE = #{record.updatedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update NEWBIE.MEMBER
    set NO = #{record.no,jdbcType=DECIMAL},
      ID = #{record.id,jdbcType=VARCHAR},
      PWD = #{record.pwd,jdbcType=VARCHAR},
      MESSAGE = #{record.message,jdbcType=VARCHAR},
      DELETED = #{record.deleted,jdbcType=CHAR},
      CREATED_DATE = #{record.createdDate,jdbcType=TIMESTAMP},
      UPDATED_DATE = #{record.updatedDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="kr.sys4u.spring.instagram.core.dto.member.Member">
    update NEWBIE.MEMBER
    <set>
      <if test="id != null">
        ID = #{id,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        PWD = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        MESSAGE = #{message,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        DELETED = #{deleted,jdbcType=CHAR},
      </if>
      <if test="createdDate != null">
        CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null">
        UPDATED_DATE = #{updatedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where NO = #{no,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="kr.sys4u.spring.instagram.core.dto.member.Member">
    update NEWBIE.MEMBER
    set ID = #{id,jdbcType=VARCHAR},
      PWD = #{pwd,jdbcType=VARCHAR},
      MESSAGE = #{message,jdbcType=VARCHAR},
      DELETED = #{deleted,jdbcType=CHAR},
      CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
      UPDATED_DATE = #{updatedDate,jdbcType=TIMESTAMP}
    where NO = #{no,jdbcType=DECIMAL}
  </update>
</mapper>