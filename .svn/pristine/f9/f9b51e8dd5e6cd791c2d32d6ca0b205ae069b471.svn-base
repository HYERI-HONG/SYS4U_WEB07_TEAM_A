(function(w, doc) {
	$(doc).ready(function() {
		
		//----------------------------------------
		 function readURL(input) {
	            if (input.files && input.files[0]) {
	            var reader = new FileReader();

	            reader.onload = function (e) {
	                    $('#blah').attr('src', e.target.result);
	                }

	              reader.readAsDataURL(input.files[0]);
	            }
	        }
		
		 //-------------------------------------------------
		$.namespace("instagram.body.ModifyPage");
		instagram.body.ModifyPage = function() {
			this.initialized();
			var that = this;
			$("#eventSource").on("instagram.body.ModifyPage.initialized", function(e) {
				that.fetch();
			});
		};

		instagram.body.ModifyPage.prototype.initialized = function() {
		};

		instagram.body.ModifyPage.prototype.destroy = function() {
		};

		instagram.body.ModifyPage.prototype.fetch = function() {
//			$('<div/>').attr({id:'userId'}).html(_userId + '님의 수정 페이지입니다.').appendTo($('#content'));
			$('#content').empty();
			var userId = _userId;
			$.ajax({
				type : "POST",
				url : _cpath + "/goModifyPage.do",
				data : {
					userId : userId
				},
				// dataType : "json",
				success : function(member) {
					var html= `	
							<div class="page">
							<form name="modifiedForm" method="post" enctype="multipart/form-data">
								<table style="height: 300px;">
									<tr>
										<td colspan="2" style="text-align: center;">
										</td>
									</tr>
									<tr>
										<td style="height: 50px"></td>
									</tr>
									<tr>
										<td style="text-align: center;width: 150px" >
											<span class="userVal">사용자 아이디</span>
											</td>
										<td style="text-align: center;width: 200px">
											<span>${member.loginID}</span>
										</td>
										<td rowspan="5" style="text-align: center;width: 200px">
											 <form id="form1" runat="server">
				       							 <img id="blah" src="/sys4u${member.memberImage.path}/${member.memberImage.name}.${member.memberImage.extension}" style="height: 200px; width: 150px;" />
				   							 </form>
										</td>
									</tr>
									<tr>
										<td style="text-align: center;width: 150px" >
											<span class="userVal">현재의 비밀번호</span>
											</td>
										<td style="text-align: center;width: 200px">
											<input type="password"	name="prepassword" id="password" style="width: 200px;">
										</td>
									</tr>
									<tr>
										<td style="text-align: center;width: 150px" >
											<span class="userVal">변경할 비밀번호</span>
											</td>
										<td style="text-align: center;width: 200px">
											<input type="password"	name="password" id="password" style="width: 200px;">
										</td>
									</tr>
									
									<tr>
										<td style="text-align: center;">
											<span class="userVal">상태 메세지</span>
											</td>
										<td style="text-align: center;">
											<input type="text" value="${member.message}" name="message" id="message" style="width: 200px;">
										</td>
									</tr>
									<tr>
										<td style="text-align: center;">
											<span class="userVal">프로필 사진</span>
										</td>
										<td style="text-align: center;">
											<input type="file" class="custom-file-input" name="memberImage" id="memberImage" accept="image/jpeg, image/png, image/gif" style="width: 200px;">
										</td>
									</tr>
									<tr>
										<td style="height: 30px"></td>
									</tr>
									<tr>
										<td colspan="2" style="text-align: center;">
										<div id="eventSource" style="display: hidden"></div> 
											<a href="#" class="square_btn" id="memUpdate"><span class="userVal">수정하기</span></a>
										</td>
									</tr>
								</table>
							</form>
						</div>
						`;
					$('#content').append(html);
					
					//그려진거 다음으로 트리거 설정
					$("#memUpdate").on("click", function(e) {
						$("#eventSource").trigger("instagram.body.memUpdate");
						 //-------------------------------------------------------
						
						 $.namespace("instagram.body.memUpdate"); 
						 instagram.body.memUpdate = function() {
								this.initialized();
								var that = this;
								$("#eventSource").on("instagram.body.memUpdate.initialized", function(e) {
									that.fetch();
								});
							};
							instagram.body.memUpdate.prototype.initialized = function() {
							};
							instagram.body.memUpdate.prototype.destroy = function() {
							};

							instagram.body.memUpdate.prototype.fetch = function() {
//								var formData = new FormData(doc.getElementById('폼 아이디'));
								var form = new FormData(document.modifiedForm);
								
								var pwJ = /^[A-Za-z0-9]{4,12}$/; // 비밀번호 정규식 A-Z,a-z,0-9로
								// 시작하는 비밀번호 를 설정할수있다
//								if (!(pwJ.test(password))) {
//									alert("비밀번호 정규식 A-Z,a-z,0-9로 시작하는  4~12자리 비밀번호 를 설정할수있습니다.");
//									return;
//								}
								
								$.ajax({
									type : "POST",
									url : _cpath + "/modifiedMem.do",
									data : {
										form : form
									},
									// dataType : "json",
									success : function(data) {
										
									},
									error : function(e) {
										console.log(e);
									}
								});
							};
							var memUpdate = new instagram.body.memUpdate();
					});
					
					//----------------
					$("#memberImage").on('change', function(){
		                readURL(this);
		            });
				
				
				},
				error : function(e) {
					console.log(e);
					alert("에러발생");
				}
			});
			
		};
		var ModifyPage = new instagram.body.ModifyPage();
		
			});
	
}(window, document));